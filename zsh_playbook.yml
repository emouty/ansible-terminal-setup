- name: Update web servers
  hosts: arr-suite
  vars:
    users:
      - "{{ ansible_user }}"
    p10k_src_file: custom.p10k.zsh
    oh_my_zsh_plugins:
      - brew
      - asdf
      - aliases
      - autoupdate
      - common-aliases
      - docker
      - git
      - history
      - sudo
      - you-should-use
      - zsh-autosuggestions
      - zsh-syntax-highlighting
  tasks:
    - name: Install zsh and oh my zsh
      ansible.builtin.import_role:
        name: oh-my-zsh-p10k
    - name: Clone zsh-you-should-use plugin
      ansible.builtin.git:
        repo: 'https://github.com/MichaelAquilina/zsh-you-should-use.git'
        version: master
        dest: '$HOME/.oh-my-zsh/custom/plugins/you-should-use'
    - name: Clone autoupdate plugin
      ansible.builtin.git:
        repo: 'https://github.com/TamCore/autoupdate-oh-my-zsh-plugins'
        version: master
        dest: $HOME/.oh-my-zsh/custom/plugins/autoupdate'
    - name: Install a list of packages
      become: true
      ansible.builtin.package:
        name:
          - fzf
          - zoxide
          - bat
          - "{{ 'avahi' if ansible_facts['os_family'] == 'Alpine' else 'avahi-daemon' }}"
          - "{{ 'py3-pip' if ansible_facts['os_family'] == 'Alpine' else 'python3-pip' }}"
          - pipx
        state: present
    - name: Ensure pipx folder is on PATH
      ansible.builtin.command: python3 -m pipx ensurepath
      register: my_output
      changed_when: my_output.rc != 0
    - name: Ensure zoxide init line is present in .zshrc
      ansible.builtin.lineinfile:
        path: "$HOME/.zshrc"
        line: 'eval "$(zoxide init --cmd cd zsh)"'
        insertafter: '^compinit'
    - name: Ensure reload profile is present in .zshrc
      ansible.builtin.lineinfile:
        path: "$HOME/.zshrc"
        line: 'alias reload_profile="source ~/.zshrc"'
    - name: Ensure ccat alias is present in .zshrc
      ansible.builtin.lineinfile:
        path: "$HOME/.zshrc"
        line: 'alias ccat="batcat --style=plain -f -u -P"'
        state: present
    - name: Ensure autosuggest highlight style is present in .zshrc
      ansible.builtin.lineinfile:
        path: "$HOME/.zshrc"
        line: 'ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#8a8a8a,underline"'
        state: present
    - name: Install tldr
      community.general.pipx:
        name: tldr
        install_apps: true
    - name: Install topgrade (non-Alpine)
      community.general.pipx:
        name: topgrade
        install_apps: true
      when: ansible_facts['os_family'] != 'Alpine'

    - name: Install topgrade (Alpine)
      become: true
      ansible.builtin.package:
        name: topgrade
        state: present
      when: ansible_facts['os_family'] == 'Alpine'
